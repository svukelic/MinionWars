@using Jmelosegui.Mvc.GoogleMap
@using System.Drawing
@model VZwars.Models.UserDataModel

@{
    ViewBag.Title = "Minion wars";
}

<!-- Modal -->
@Html.Partial("Partial_userPageModal")

@Html.Partial("Partial_battlegroupPageModal")

@Html.Partial("Partial_clickModal")

@Html.Partial("Partial_buildingModal")

@Html.Partial("Partial_groupCreationModal")

@Html.Partial("Partial_bgClickModal")

<!-- Dodatne tipke -->
<!--<div class="row">
    <div class="col-md-3">
        <button type="button" class="btn btn-info btn-lg" data-toggle="modal" data-target="#userPageModal">User info</button>
    </div>
    <div class="col-md-3">
        <button type="button" class="btn btn-info btn-lg" data-toggle="modal" data-target="#userPageModal">Battlegroups</button>
    </div>
    <div class="col-md-3">
        <button type="button" class="btn btn-info btn-lg" data-toggle="modal" data-target="#userPageModal">Camps</button>
    </div>
    <div class="col-md-3">
        <button type="button" class="btn btn-info btn-lg" data-toggle="modal" data-target="#userPageModal">Resources</button>
    </div>
</div>

<hr />-->

<!-- Mapa -->
<div class="row">
    <div class="col-md-12">
        @(Html.GoogleMap()
              .Name("map")
              .Center(c => c.Latitude(46.312d).Longitude(16.361d))
              .Zoom(15)
              .Height(600)
              .ScaleControlVisible(false).PanControlVisible(false).OverviewMapControlVisible(false).StreetViewControlVisible(false).ZoomControlVisible(false).MapTypeControlVisible(false)
              .ApiKey("AIzaSyB3HF7za99ZA7QS8LhLJTkGN95LTB-_Ffk")
              .ClientEvents(events => events.OnMapClick("mapClickEvent").OnMapLoaded("mapLoadedEvent"))
        )
    </div>
</div>

@section scripts
{
    @(Html.GoogleMap().ScriptRegistrar())
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script type="text/javascript">
        var UserMarker = null;
        var map = null;
        var clickedPosition = null;
        var clickedMarker = null;
        var subscribedMarkers = new Array();
        var markerMovement = new Array();
        var bgMarkersData = new Array();

        var targetId = null;
        var targetLoc = null;

        $(document).ready(function () {
            navigator.geolocation.watchPosition(savePosition);

            $("#modalStats").hide();

            $("#modalPersonalBG").hide();
            $("#modalRemoteBG").hide();
            $("#modalMinions").hide();

            setTimeout(executeMapRefresh, 5000);


        });

        function executeMapRefresh() {
            $.ajax({
                type: "POST",
                url: '@Url.Action("RefreshMap")',
                data: { 'lat': UserMarker.getPosition().lat(), 'lon': UserMarker.getPosition().lng() },
                dataType: 'json',
                success: function (jsonData) {
                    if (jsonData != null) {
                        //alert(JSON.stringify(jsonData));
                        if (jsonData.length > 0) {
                            for (var i = 0; i < bgMarkersData.length; i++) {
                                bgMarkersData[i].setMap(null);
                            }
                            bgMarkersData = new Array();
                            for (var i = 0; i < jsonData.length; i++) {
                                refreshMarker(jsonData[i]);
                            }
                        }
                    }
                },
                error: function (jsonData) {
                    alert("Error");
                }
            });

            setTimeout(executeMapRefresh, 5000);
        }

        function refreshMarker(data) {
            var pos = new google.maps.LatLng({ lat: data.latitude, lng: data.longitude });

            var marker = new google.maps.Marker({
                position: pos,
                map: map,
                id: data.id,
                title: data.type,
                icon: 'http://minion-wars.azurewebsites.net/Content/icons/dwarf-helmet.png'
            });

            marker.addListener('click', function (e) {
                //alert("clicked - " + this.getPosition());
                targetLoc = this.getPosition();
                targetId = this.id;
                var distance = GetDistance(UserMarker.getPosition().lat(), UserMarker.getPosition().lng(), targetLoc.lat(), targetLoc.lng()).toFixed(2);
                $("#target_distance").text("Distance: " + distance);
                if (distance > 75) {
                    $("#btnInitiateAttack").prop("disabled", true);
                }
                else {
                    $("#btnInitiateAttack").prop("disabled", false);
                }
                $("#bgClickModal").modal();
            });
            //map.panTo(pos);
            bgMarkersData.push(marker);
        }

        function mapClickEvent(args) {
            var adresa = GetAddress(args.latLng);
            clickedPosition = args.latLng;
            var distance = GetDistance(UserMarker.getPosition().lat(), UserMarker.getPosition().lng(), args.latLng.lat(), args.latLng.lng()).toFixed(2);
            $("#distanceClick").text(distance + " metara");
            if (distance > 75) {
                $("#btnBuildCamp").prop("disabled", true);
            }
            else {
                $("#btnBuildCamp").prop("disabled", false);
            }
            $("#clickModal").modal();
        }

        function mapLoadedEvent(args) {
            map = args.map;
        }

        function savePosition(position) {
            var pos = new google.maps.LatLng({ lat: position.coords.latitude, lng: position.coords.longitude });
            $.ajax({
                type: "POST",
                url: '@Url.Action("AddMinionsToGroup")',
                data: { 'lat': position.coords.latitude, 'lon': position.coords.longitude },
                dataType: 'json',
                success: function (jsonData) {
                    if(map != null){
                        if (UserMarker == null) {
                            UserMarker = new google.maps.Marker({
                                position: pos,
                                map: map,
                                id: 'UserMaker',
                                title: 'User',
                                icon: 'http://minion-wars.azurewebsites.net/Content/icons/barbute.png'
                            });
                            map.panTo(pos);
                        }
                        else {
                            UserMarker.setPosition(pos);
                        }
                    }
                },
                error: function (jsonData) {
                    alert("Error");
                }
            });
        }

        function GetAddress(latlng) {
            var geocoder = geocoder = new google.maps.Geocoder();
            geocoder.geocode({ 'latLng': latlng }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    if (results[1]) {
                        $("#addressClick").text("Location: " + results[1].formatted_address);
                        $("#locClick").text(UserMarker.getPosition().lat() + " " + UserMarker.getPosition().lng());
                        return results[1].formatted_address;
                    }
                }
            });
        }

        function GetDistance(lat1, lon1, lat2, lon2) {
            var p = 0.017453292519943295;
            var c = Math.cos;
            var a = 0.5 - c((lat2 - lat1) * p) / 2 +
                    c(lat1 * p) * c(lat2 * p) *
                    (1 - c((lon2 - lon1) * p)) / 2;

            return 12742 * 1000 * Math.asin(Math.sqrt(a));
        }

        $(function () {
            $("#userTabs").tabs();
            $("#bgTabs").tabs();
        });

        $("#btnBuildCamp").click(function () {
            if(clickedPosition != null){
                var marker = new google.maps.Marker({
                    position: clickedPosition,
                    map: map,
                    id: 'test1',
                    title: 'Camp',
                    icon: 'http://minion-wars.azurewebsites.net/Content/icons/camping-tent.png'
                });

                marker.addListener('click', function (e) {
                    clickedMarker = marker;
                    $("#buildingModal").modal();
                });
            }
            $("#clickModal").modal('hide');
        });

        $("#btnUpgradeCamp").click(function () {
            if (clickedMarker != null) {
                $("#buildingModal").modal('hide');
                clickedMarker.setIcon("http://minion-wars.azurewebsites.net/Content/icons/goblin-camp.png");
                clickedMarker.setTitle("Outpost");
            }
        });

        $("#btnSendMinions").click(function () {
            $.ajax({
                type: "POST",
                url: '@Url.Action("SendMinions")',
                data: { 'count': 10 },
                dataType: 'json',
                success: function (jsonData) {
                    if (jsonData != null) {
                        if (jsonData.length > 0) {
                            for(var i = 0; i<jsonData.length; i++){
                            if (clickedPosition != null) {
                                var marker = new google.maps.Marker({
                                    position: UserMarker.getPosition(),
                                    map: map,
                                    id: jsonData[i].id,
                                    title: 'Minion group',
                                    icon: 'http://minion-wars.azurewebsites.net/Content/icons/dwarf-helmet.png'
                                });

                                var markerData = {
                                    id: jsonData[i].id,
                                    destination: clickedPosition
                                };

                                marker.addListener('click', function (e) {
                                    alert("clicked");
                                });

                                subscribedMarkers.push(marker);
                                markerMovement.push(markerData);
                            }
                        }
                        }
                    }
                    $("#clickModal").modal('hide');
                },
                error: function (jsonData) {
                    alert("Error");
                }
            });
        });

        //battlegroup functions
        function removeMinions(id) {
            alert(id);
        }

        function deleteGroup(id) {
            alert(id);
            alert(document.cookie);
        }

        function displayGroupDetails(id) {
            document.cookie = "bgDetails = " + id;
        }

        var groupToAdd = -1;
        function addToGroup(id) {
            groupToAdd = id;
            $('#groupCreationModal').modal({
                show: 'true'
            });
        }

        function submitGroupAddition() {
            $.ajax({
                type: "POST",
                url: '@Url.Action("AddMinionsToGroup")',
                data: { 'o_id': groupToAdd, 'amount': $("#amount").val(), 'line': $("#groupCreationForm input[type='radio']:checked").val(), 'bg_id': $('#bgroupList :selected').val(), 'name': $("#additionName").val() },
                dataType: 'json',
                success: function (jsonData) {
                    //alert("success - " + JSON.stringify(jsonData));
                    location.reload();
                },
                error: function (jsonData) {
                    alert("Error");
                }
            });
        }

        $("#additionName").change(function () {
            if ($("#additionName").val() == "" || $("#additionName").val() == null) {
                $('#bgroupList').removeAttr('disabled');
            }
            else {
                $('#bgroupList').attr('disabled', 'disabled');
            }
        });

        function InitiateAttack() {
            $.ajax({
                type: "POST",
                url: '@Url.Action("InitiateCombat")',
                data: { 'pbg_id': @Model.personalBg.battlegroup.id, 'target_id': targetId },
                dataType: 'json',
                success: function (jsonData) {
                    alert("success - " + JSON.stringify(jsonData));
                },
                error: function (jsonData) {
                    alert("Error");
                }
            });
        }
    </script>
}